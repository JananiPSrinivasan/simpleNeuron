#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "E:\Icarus\iverilog\lib\ivl\system.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\va_math.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\v2009.vpi";
S_000001ef8b2b4cc0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001ef8b29c620 .scope module, "adder_tb" "adder_tb" 3 3;
 .timescale -12 -12;
v000001ef8b30ec20_0 .net "carry", 0 0, L_000001ef8b30f1c0;  1 drivers
v000001ef8b30fc60_0 .var "in1", 7 0;
v000001ef8b30f6c0_0 .var "in2", 7 0;
v000001ef8b30ecc0_0 .net "sum", 7 0, L_000001ef8b30f260;  1 drivers
S_000001ef8b29c7b0 .scope module, "dut" "adder" 3 9, 4 1 0, S_000001ef8b29c620;
 .timescale -12 -12;
    .port_info 0 /INPUT 8 "in1";
    .port_info 1 /INPUT 8 "in2";
    .port_info 2 /OUTPUT 8 "sum";
    .port_info 3 /OUTPUT 1 "carry";
o000001ef8b2b8c78 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v000001ef8b30f440_0 name=_ivl_62
v000001ef8b30eb80_0 .net "carry", 0 0, L_000001ef8b30f1c0;  alias, 1 drivers
v000001ef8b30fb20_0 .net "carry_in", 8 0, L_000001ef8b30f9e0;  1 drivers
v000001ef8b30e540_0 .net "in1", 7 0, v000001ef8b30fc60_0;  1 drivers
v000001ef8b30e0e0_0 .net "in2", 7 0, v000001ef8b30f6c0_0;  1 drivers
v000001ef8b30e5e0_0 .net "sum", 7 0, L_000001ef8b30f260;  alias, 1 drivers
L_000001ef8b30e180 .part v000001ef8b30fc60_0, 1, 1;
L_000001ef8b30ee00 .part v000001ef8b30f6c0_0, 1, 1;
L_000001ef8b30e2c0 .part L_000001ef8b30f9e0, 0, 1;
L_000001ef8b30fbc0 .part v000001ef8b30fc60_0, 2, 1;
L_000001ef8b30e220 .part v000001ef8b30f6c0_0, 2, 1;
L_000001ef8b30e720 .part L_000001ef8b30f9e0, 1, 1;
L_000001ef8b30ef40 .part v000001ef8b30fc60_0, 3, 1;
L_000001ef8b30eea0 .part v000001ef8b30f6c0_0, 3, 1;
L_000001ef8b30e7c0 .part L_000001ef8b30f9e0, 2, 1;
L_000001ef8b30e400 .part v000001ef8b30fc60_0, 4, 1;
L_000001ef8b30fd00 .part v000001ef8b30f6c0_0, 4, 1;
L_000001ef8b30f760 .part L_000001ef8b30f9e0, 3, 1;
L_000001ef8b30f3a0 .part v000001ef8b30fc60_0, 5, 1;
L_000001ef8b30e860 .part v000001ef8b30f6c0_0, 5, 1;
L_000001ef8b30e360 .part L_000001ef8b30f9e0, 4, 1;
L_000001ef8b30e900 .part v000001ef8b30fc60_0, 6, 1;
L_000001ef8b30f800 .part v000001ef8b30f6c0_0, 6, 1;
L_000001ef8b30e9a0 .part L_000001ef8b30f9e0, 5, 1;
L_000001ef8b30f080 .part v000001ef8b30fc60_0, 7, 1;
L_000001ef8b30f8a0 .part v000001ef8b30f6c0_0, 7, 1;
L_000001ef8b30f940 .part L_000001ef8b30f9e0, 6, 1;
L_000001ef8b30f120 .part v000001ef8b30fc60_0, 0, 1;
L_000001ef8b30fda0 .part v000001ef8b30f6c0_0, 0, 1;
LS_000001ef8b30f260_0_0 .concat8 [ 1 1 1 1], L_000001ef8b313d60, L_000001ef8b2af410, L_000001ef8b2ae990, L_000001ef8b2af790;
LS_000001ef8b30f260_0_4 .concat8 [ 1 1 1 1], L_000001ef8b2af3a0, L_000001ef8b3134a0, L_000001ef8b3139e0, L_000001ef8b313200;
L_000001ef8b30f260 .concat8 [ 4 4 0 0], LS_000001ef8b30f260_0_0, LS_000001ef8b30f260_0_4;
L_000001ef8b30f1c0 .part L_000001ef8b30f9e0, 8, 1;
LS_000001ef8b30f9e0_0_0 .concat [ 1 1 1 1], L_000001ef8b3133c0, L_000001ef8b2aeb50, L_000001ef8b2af170, L_000001ef8b2af4f0;
LS_000001ef8b30f9e0_0_4 .concat [ 1 1 1 1], L_000001ef8b313ac0, L_000001ef8b313b30, L_000001ef8b313c80, L_000001ef8b313890;
LS_000001ef8b30f9e0_0_8 .concat [ 1 0 0 0], o000001ef8b2b8c78;
L_000001ef8b30f9e0 .concat [ 4 4 1 0], LS_000001ef8b30f9e0_0_0, LS_000001ef8b30f9e0_0_4, LS_000001ef8b30f9e0_0_8;
S_000001ef8b2975c0 .scope generate, "genblk1[1]" "genblk1[1]" 4 21, 4 21 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
P_000001ef8b2b2ef0 .param/l "i" 0 4 21, +C4<01>;
S_000001ef8b297750 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001ef8b2975c0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001ef8b2af5d0 .functor XOR 1, L_000001ef8b30e180, L_000001ef8b30ee00, C4<0>, C4<0>;
L_000001ef8b2af410 .functor XOR 1, L_000001ef8b2af5d0, L_000001ef8b30e2c0, C4<0>, C4<0>;
L_000001ef8b2aed10 .functor AND 1, L_000001ef8b30e180, L_000001ef8b30ee00, C4<1>, C4<1>;
L_000001ef8b2af020 .functor AND 1, L_000001ef8b30e180, L_000001ef8b30e2c0, C4<1>, C4<1>;
L_000001ef8b2af100 .functor OR 1, L_000001ef8b2aed10, L_000001ef8b2af020, C4<0>, C4<0>;
L_000001ef8b2af640 .functor AND 1, L_000001ef8b30ee00, L_000001ef8b30e2c0, C4<1>, C4<1>;
L_000001ef8b2aeb50 .functor OR 1, L_000001ef8b2af100, L_000001ef8b2af640, C4<0>, C4<0>;
v000001ef8b2a9460_0 .net *"_ivl_0", 0 0, L_000001ef8b2af5d0;  1 drivers
v000001ef8b2a9dc0_0 .net *"_ivl_10", 0 0, L_000001ef8b2af640;  1 drivers
v000001ef8b2a9500_0 .net *"_ivl_4", 0 0, L_000001ef8b2aed10;  1 drivers
v000001ef8b2a8740_0 .net *"_ivl_6", 0 0, L_000001ef8b2af020;  1 drivers
v000001ef8b2a8ba0_0 .net *"_ivl_8", 0 0, L_000001ef8b2af100;  1 drivers
v000001ef8b2a9be0_0 .net "a", 0 0, L_000001ef8b30e180;  1 drivers
v000001ef8b2a8ce0_0 .net "b", 0 0, L_000001ef8b30ee00;  1 drivers
v000001ef8b2a9c80_0 .net "cin", 0 0, L_000001ef8b30e2c0;  1 drivers
v000001ef8b2a8100_0 .net "fa_carry", 0 0, L_000001ef8b2aeb50;  1 drivers
v000001ef8b2a87e0_0 .net "fa_sum", 0 0, L_000001ef8b2af410;  1 drivers
S_000001ef8b30a880 .scope generate, "genblk1[2]" "genblk1[2]" 4 21, 4 21 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
P_000001ef8b2b3770 .param/l "i" 0 4 21, +C4<010>;
S_000001ef8b30aa10 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001ef8b30a880;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001ef8b2aea70 .functor XOR 1, L_000001ef8b30fbc0, L_000001ef8b30e220, C4<0>, C4<0>;
L_000001ef8b2ae990 .functor XOR 1, L_000001ef8b2aea70, L_000001ef8b30e720, C4<0>, C4<0>;
L_000001ef8b2aea00 .functor AND 1, L_000001ef8b30fbc0, L_000001ef8b30e220, C4<1>, C4<1>;
L_000001ef8b2aec30 .functor AND 1, L_000001ef8b30fbc0, L_000001ef8b30e720, C4<1>, C4<1>;
L_000001ef8b2af720 .functor OR 1, L_000001ef8b2aea00, L_000001ef8b2aec30, C4<0>, C4<0>;
L_000001ef8b2af560 .functor AND 1, L_000001ef8b30e220, L_000001ef8b30e720, C4<1>, C4<1>;
L_000001ef8b2af170 .functor OR 1, L_000001ef8b2af720, L_000001ef8b2af560, C4<0>, C4<0>;
v000001ef8b2a82e0_0 .net *"_ivl_0", 0 0, L_000001ef8b2aea70;  1 drivers
v000001ef8b2a3110_0 .net *"_ivl_10", 0 0, L_000001ef8b2af560;  1 drivers
v000001ef8b2a3570_0 .net *"_ivl_4", 0 0, L_000001ef8b2aea00;  1 drivers
v000001ef8b2a39d0_0 .net *"_ivl_6", 0 0, L_000001ef8b2aec30;  1 drivers
v000001ef8b2a2cb0_0 .net *"_ivl_8", 0 0, L_000001ef8b2af720;  1 drivers
v000001ef8b30c770_0 .net "a", 0 0, L_000001ef8b30fbc0;  1 drivers
v000001ef8b30beb0_0 .net "b", 0 0, L_000001ef8b30e220;  1 drivers
v000001ef8b30c1d0_0 .net "cin", 0 0, L_000001ef8b30e720;  1 drivers
v000001ef8b30b550_0 .net "fa_carry", 0 0, L_000001ef8b2af170;  1 drivers
v000001ef8b30af10_0 .net "fa_sum", 0 0, L_000001ef8b2ae990;  1 drivers
S_000001ef8b30cfb0 .scope generate, "genblk1[3]" "genblk1[3]" 4 21, 4 21 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
P_000001ef8b2b3ab0 .param/l "i" 0 4 21, +C4<011>;
S_000001ef8b30d140 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001ef8b30cfb0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001ef8b2aeed0 .functor XOR 1, L_000001ef8b30ef40, L_000001ef8b30eea0, C4<0>, C4<0>;
L_000001ef8b2af790 .functor XOR 1, L_000001ef8b2aeed0, L_000001ef8b30e7c0, C4<0>, C4<0>;
L_000001ef8b2af1e0 .functor AND 1, L_000001ef8b30ef40, L_000001ef8b30eea0, C4<1>, C4<1>;
L_000001ef8b2aefb0 .functor AND 1, L_000001ef8b30ef40, L_000001ef8b30e7c0, C4<1>, C4<1>;
L_000001ef8b2aeca0 .functor OR 1, L_000001ef8b2af1e0, L_000001ef8b2aefb0, C4<0>, C4<0>;
L_000001ef8b2aed80 .functor AND 1, L_000001ef8b30eea0, L_000001ef8b30e7c0, C4<1>, C4<1>;
L_000001ef8b2af4f0 .functor OR 1, L_000001ef8b2aeca0, L_000001ef8b2aed80, C4<0>, C4<0>;
v000001ef8b30c270_0 .net *"_ivl_0", 0 0, L_000001ef8b2aeed0;  1 drivers
v000001ef8b30c810_0 .net *"_ivl_10", 0 0, L_000001ef8b2aed80;  1 drivers
v000001ef8b30bb90_0 .net *"_ivl_4", 0 0, L_000001ef8b2af1e0;  1 drivers
v000001ef8b30b9b0_0 .net *"_ivl_6", 0 0, L_000001ef8b2aefb0;  1 drivers
v000001ef8b30b910_0 .net *"_ivl_8", 0 0, L_000001ef8b2aeca0;  1 drivers
v000001ef8b30c130_0 .net "a", 0 0, L_000001ef8b30ef40;  1 drivers
v000001ef8b30c4f0_0 .net "b", 0 0, L_000001ef8b30eea0;  1 drivers
v000001ef8b30c590_0 .net "cin", 0 0, L_000001ef8b30e7c0;  1 drivers
v000001ef8b30c8b0_0 .net "fa_carry", 0 0, L_000001ef8b2af4f0;  1 drivers
v000001ef8b30c450_0 .net "fa_sum", 0 0, L_000001ef8b2af790;  1 drivers
S_000001ef8b30d2d0 .scope generate, "genblk1[4]" "genblk1[4]" 4 21, 4 21 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
P_000001ef8b2b32f0 .param/l "i" 0 4 21, +C4<0100>;
S_000001ef8b30d460 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001ef8b30d2d0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001ef8b2af250 .functor XOR 1, L_000001ef8b30e400, L_000001ef8b30fd00, C4<0>, C4<0>;
L_000001ef8b2af3a0 .functor XOR 1, L_000001ef8b2af250, L_000001ef8b30f760, C4<0>, C4<0>;
L_000001ef8b313900 .functor AND 1, L_000001ef8b30e400, L_000001ef8b30fd00, C4<1>, C4<1>;
L_000001ef8b313660 .functor AND 1, L_000001ef8b30e400, L_000001ef8b30f760, C4<1>, C4<1>;
L_000001ef8b313040 .functor OR 1, L_000001ef8b313900, L_000001ef8b313660, C4<0>, C4<0>;
L_000001ef8b313eb0 .functor AND 1, L_000001ef8b30fd00, L_000001ef8b30f760, C4<1>, C4<1>;
L_000001ef8b313ac0 .functor OR 1, L_000001ef8b313040, L_000001ef8b313eb0, C4<0>, C4<0>;
v000001ef8b30c630_0 .net *"_ivl_0", 0 0, L_000001ef8b2af250;  1 drivers
v000001ef8b30c6d0_0 .net *"_ivl_10", 0 0, L_000001ef8b313eb0;  1 drivers
v000001ef8b30c310_0 .net *"_ivl_4", 0 0, L_000001ef8b313900;  1 drivers
v000001ef8b30bc30_0 .net *"_ivl_6", 0 0, L_000001ef8b313660;  1 drivers
v000001ef8b30b0f0_0 .net *"_ivl_8", 0 0, L_000001ef8b313040;  1 drivers
v000001ef8b30ba50_0 .net "a", 0 0, L_000001ef8b30e400;  1 drivers
v000001ef8b30b2d0_0 .net "b", 0 0, L_000001ef8b30fd00;  1 drivers
v000001ef8b30b7d0_0 .net "cin", 0 0, L_000001ef8b30f760;  1 drivers
v000001ef8b30bf50_0 .net "fa_carry", 0 0, L_000001ef8b313ac0;  1 drivers
v000001ef8b30be10_0 .net "fa_sum", 0 0, L_000001ef8b2af3a0;  1 drivers
S_000001ef8b30d5f0 .scope generate, "genblk1[5]" "genblk1[5]" 4 21, 4 21 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
P_000001ef8b2b3330 .param/l "i" 0 4 21, +C4<0101>;
S_000001ef8b30d780 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001ef8b30d5f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001ef8b313510 .functor XOR 1, L_000001ef8b30f3a0, L_000001ef8b30e860, C4<0>, C4<0>;
L_000001ef8b3134a0 .functor XOR 1, L_000001ef8b313510, L_000001ef8b30e360, C4<0>, C4<0>;
L_000001ef8b313a50 .functor AND 1, L_000001ef8b30f3a0, L_000001ef8b30e860, C4<1>, C4<1>;
L_000001ef8b313970 .functor AND 1, L_000001ef8b30f3a0, L_000001ef8b30e360, C4<1>, C4<1>;
L_000001ef8b3130b0 .functor OR 1, L_000001ef8b313a50, L_000001ef8b313970, C4<0>, C4<0>;
L_000001ef8b313270 .functor AND 1, L_000001ef8b30e860, L_000001ef8b30e360, C4<1>, C4<1>;
L_000001ef8b313b30 .functor OR 1, L_000001ef8b3130b0, L_000001ef8b313270, C4<0>, C4<0>;
v000001ef8b30b870_0 .net *"_ivl_0", 0 0, L_000001ef8b313510;  1 drivers
v000001ef8b30c3b0_0 .net *"_ivl_10", 0 0, L_000001ef8b313270;  1 drivers
v000001ef8b30c950_0 .net *"_ivl_4", 0 0, L_000001ef8b313a50;  1 drivers
v000001ef8b30c9f0_0 .net *"_ivl_6", 0 0, L_000001ef8b313970;  1 drivers
v000001ef8b30ca90_0 .net *"_ivl_8", 0 0, L_000001ef8b3130b0;  1 drivers
v000001ef8b30afb0_0 .net "a", 0 0, L_000001ef8b30f3a0;  1 drivers
v000001ef8b30bd70_0 .net "b", 0 0, L_000001ef8b30e860;  1 drivers
v000001ef8b30ad30_0 .net "cin", 0 0, L_000001ef8b30e360;  1 drivers
v000001ef8b30bff0_0 .net "fa_carry", 0 0, L_000001ef8b313b30;  1 drivers
v000001ef8b30abf0_0 .net "fa_sum", 0 0, L_000001ef8b3134a0;  1 drivers
S_000001ef8b30d910 .scope generate, "genblk1[6]" "genblk1[6]" 4 21, 4 21 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
P_000001ef8b2b3670 .param/l "i" 0 4 21, +C4<0110>;
S_000001ef8b30daa0 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001ef8b30d910;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001ef8b3136d0 .functor XOR 1, L_000001ef8b30e900, L_000001ef8b30f800, C4<0>, C4<0>;
L_000001ef8b3139e0 .functor XOR 1, L_000001ef8b3136d0, L_000001ef8b30e9a0, C4<0>, C4<0>;
L_000001ef8b313ba0 .functor AND 1, L_000001ef8b30e900, L_000001ef8b30f800, C4<1>, C4<1>;
L_000001ef8b3137b0 .functor AND 1, L_000001ef8b30e900, L_000001ef8b30e9a0, C4<1>, C4<1>;
L_000001ef8b313c10 .functor OR 1, L_000001ef8b313ba0, L_000001ef8b3137b0, C4<0>, C4<0>;
L_000001ef8b313190 .functor AND 1, L_000001ef8b30f800, L_000001ef8b30e9a0, C4<1>, C4<1>;
L_000001ef8b313c80 .functor OR 1, L_000001ef8b313c10, L_000001ef8b313190, C4<0>, C4<0>;
v000001ef8b30ac90_0 .net *"_ivl_0", 0 0, L_000001ef8b3136d0;  1 drivers
v000001ef8b30add0_0 .net *"_ivl_10", 0 0, L_000001ef8b313190;  1 drivers
v000001ef8b30b370_0 .net *"_ivl_4", 0 0, L_000001ef8b313ba0;  1 drivers
v000001ef8b30ae70_0 .net *"_ivl_6", 0 0, L_000001ef8b3137b0;  1 drivers
v000001ef8b30baf0_0 .net *"_ivl_8", 0 0, L_000001ef8b313c10;  1 drivers
v000001ef8b30b410_0 .net "a", 0 0, L_000001ef8b30e900;  1 drivers
v000001ef8b30bcd0_0 .net "b", 0 0, L_000001ef8b30f800;  1 drivers
v000001ef8b30b050_0 .net "cin", 0 0, L_000001ef8b30e9a0;  1 drivers
v000001ef8b30c090_0 .net "fa_carry", 0 0, L_000001ef8b313c80;  1 drivers
v000001ef8b30b190_0 .net "fa_sum", 0 0, L_000001ef8b3139e0;  1 drivers
S_000001ef8b30dc30 .scope generate, "genblk1[7]" "genblk1[7]" 4 21, 4 21 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
P_000001ef8b2b39b0 .param/l "i" 0 4 21, +C4<0111>;
S_000001ef8b30ddc0 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001ef8b30dc30;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001ef8b313120 .functor XOR 1, L_000001ef8b30f080, L_000001ef8b30f8a0, C4<0>, C4<0>;
L_000001ef8b313200 .functor XOR 1, L_000001ef8b313120, L_000001ef8b30f940, C4<0>, C4<0>;
L_000001ef8b313e40 .functor AND 1, L_000001ef8b30f080, L_000001ef8b30f8a0, C4<1>, C4<1>;
L_000001ef8b313820 .functor AND 1, L_000001ef8b30f080, L_000001ef8b30f940, C4<1>, C4<1>;
L_000001ef8b313580 .functor OR 1, L_000001ef8b313e40, L_000001ef8b313820, C4<0>, C4<0>;
L_000001ef8b313cf0 .functor AND 1, L_000001ef8b30f8a0, L_000001ef8b30f940, C4<1>, C4<1>;
L_000001ef8b313890 .functor OR 1, L_000001ef8b313580, L_000001ef8b313cf0, C4<0>, C4<0>;
v000001ef8b30b4b0_0 .net *"_ivl_0", 0 0, L_000001ef8b313120;  1 drivers
v000001ef8b30b230_0 .net *"_ivl_10", 0 0, L_000001ef8b313cf0;  1 drivers
v000001ef8b30b5f0_0 .net *"_ivl_4", 0 0, L_000001ef8b313e40;  1 drivers
v000001ef8b30b690_0 .net *"_ivl_6", 0 0, L_000001ef8b313820;  1 drivers
v000001ef8b30b730_0 .net *"_ivl_8", 0 0, L_000001ef8b313580;  1 drivers
v000001ef8b30f4e0_0 .net "a", 0 0, L_000001ef8b30f080;  1 drivers
v000001ef8b30eae0_0 .net "b", 0 0, L_000001ef8b30f8a0;  1 drivers
v000001ef8b30dfa0_0 .net "cin", 0 0, L_000001ef8b30f940;  1 drivers
v000001ef8b30fe40_0 .net "fa_carry", 0 0, L_000001ef8b313890;  1 drivers
v000001ef8b30f580_0 .net "fa_sum", 0 0, L_000001ef8b313200;  1 drivers
S_000001ef8b310780 .scope module, "ha0" "half_adder" 4 12, 4 54 0, S_000001ef8b29c7b0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "ha_sum";
    .port_info 3 /OUTPUT 1 "ha_carry";
L_000001ef8b313d60 .functor XOR 1, L_000001ef8b30f120, L_000001ef8b30fda0, C4<0>, C4<0>;
L_000001ef8b3133c0 .functor AND 1, L_000001ef8b30f120, L_000001ef8b30fda0, C4<1>, C4<1>;
v000001ef8b30e4a0_0 .net "a", 0 0, L_000001ef8b30f120;  1 drivers
v000001ef8b30e040_0 .net "b", 0 0, L_000001ef8b30fda0;  1 drivers
v000001ef8b30efe0_0 .net "ha_carry", 0 0, L_000001ef8b3133c0;  1 drivers
v000001ef8b30ea40_0 .net "ha_sum", 0 0, L_000001ef8b313d60;  1 drivers
S_000001ef8b310910 .scope task, "test" "test" 3 16, 3 16 0, S_000001ef8b29c620;
 .timescale -12 -12;
v000001ef8b30ed60_0 .var "a", 7 0;
v000001ef8b30f620_0 .var "b", 7 0;
v000001ef8b30e680_0 .var "expected", 7 0;
TD_adder_tb.test ;
    %load/vec4 v000001ef8b30ed60_0;
    %store/vec4 v000001ef8b30fc60_0, 0, 8;
    %load/vec4 v000001ef8b30f620_0;
    %store/vec4 v000001ef8b30f6c0_0, 0, 8;
    %delay 1, 0;
    %load/vec4 v000001ef8b30ed60_0;
    %load/vec4 v000001ef8b30f620_0;
    %add;
    %store/vec4 v000001ef8b30e680_0, 0, 8;
    %load/vec4 v000001ef8b30ec20_0;
    %load/vec4 v000001ef8b30ecc0_0;
    %concat/vec4; draw_concat_vec4
    %load/vec4 v000001ef8b30e680_0;
    %pad/u 9;
    %cmp/ne;
    %jmp/0xz  T_0.0, 4;
    %load/vec4 v000001ef8b30ec20_0;
    %load/vec4 v000001ef8b30ecc0_0;
    %concat/vec4; draw_concat_vec4
    %vpi_call/w 3 27 "$display", "Error \012 Expected : %0d+%0d = 0%d \012 Obtained : %0d+%0d = 0%d", v000001ef8b30ed60_0, v000001ef8b30f620_0, v000001ef8b30e680_0, v000001ef8b30fc60_0, v000001ef8b30f6c0_0, S<0,vec4,u9> {1 0 0};
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v000001ef8b30ec20_0;
    %load/vec4 v000001ef8b30ecc0_0;
    %concat/vec4; draw_concat_vec4
    %vpi_call/w 3 30 "$display", "Test cases passed!\012 Expected : %0d+%0d = 0%d \012 Obtained : %0d+%0d = 0%d", v000001ef8b30ed60_0, v000001ef8b30f620_0, v000001ef8b30e680_0, v000001ef8b30fc60_0, v000001ef8b30f6c0_0, S<0,vec4,u9> {1 0 0};
T_0.1 ;
    %end;
    .scope S_000001ef8b29c620;
T_1 ;
    %vpi_call/w 3 39 "$display", "Starting adder functional verification..." {0 0 0};
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001ef8b30ed60_0, 0, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001ef8b30f620_0, 0, 8;
    %fork TD_adder_tb.test, S_000001ef8b310910;
    %join;
    %pushi/vec4 5, 0, 8;
    %store/vec4 v000001ef8b30ed60_0, 0, 8;
    %pushi/vec4 10, 0, 8;
    %store/vec4 v000001ef8b30f620_0, 0, 8;
    %fork TD_adder_tb.test, S_000001ef8b310910;
    %join;
    %pushi/vec4 127, 0, 8;
    %store/vec4 v000001ef8b30ed60_0, 0, 8;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v000001ef8b30f620_0, 0, 8;
    %fork TD_adder_tb.test, S_000001ef8b310910;
    %join;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001ef8b30ed60_0, 0, 8;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v000001ef8b30f620_0, 0, 8;
    %fork TD_adder_tb.test, S_000001ef8b310910;
    %join;
    %pushi/vec4 200, 0, 8;
    %store/vec4 v000001ef8b30ed60_0, 0, 8;
    %pushi/vec4 100, 0, 8;
    %store/vec4 v000001ef8b30f620_0, 0, 8;
    %fork TD_adder_tb.test, S_000001ef8b310910;
    %join;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001ef8b30ed60_0, 0, 8;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001ef8b30f620_0, 0, 8;
    %fork TD_adder_tb.test, S_000001ef8b310910;
    %join;
    %pushi/vec4 10, 0, 32;
T_1.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_1.1, 5;
    %jmp/1 T_1.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %vpi_func 3 51 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000011111111 {0 0 0};
    %pad/u 8;
    %store/vec4 v000001ef8b30ed60_0, 0, 8;
    %vpi_func 3 51 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000011111111 {0 0 0};
    %pad/u 8;
    %store/vec4 v000001ef8b30f620_0, 0, 8;
    %fork TD_adder_tb.test, S_000001ef8b310910;
    %join;
    %jmp T_1.0;
T_1.1 ;
    %pop/vec4 1;
    %vpi_call/w 3 54 "$display", "Testbench completed." {0 0 0};
    %vpi_call/w 3 55 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    ".\functional\adder_tb.sv";
    ".\src\adder.sv";
