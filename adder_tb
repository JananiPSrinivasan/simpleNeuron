#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "E:\Icarus\iverilog\lib\ivl\system.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\va_math.vpi";
:vpi_module "E:\Icarus\iverilog\lib\ivl\v2009.vpi";
S_000001caf184e0a0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001caf184e230 .scope module, "adder_tb" "adder_tb" 3 3;
 .timescale -12 -12;
v000001caf18bf5a0_0 .net "carry", 0 0, L_000001caf18bf1e0;  1 drivers
v000001caf18bffa0_0 .var "in1", 7 0;
v000001caf18beb00_0 .var "in2", 7 0;
v000001caf18bfd20_0 .net "sum", 7 0, L_000001caf18bf140;  1 drivers
S_000001caf184c650 .scope module, "dut" "adder" 3 9, 4 1 0, S_000001caf184e230;
 .timescale -12 -12;
    .port_info 0 /INPUT 8 "in1";
    .port_info 1 /INPUT 8 "in2";
    .port_info 2 /OUTPUT 8 "sum";
    .port_info 3 /OUTPUT 1 "carry";
o000001caf18688b8 .functor BUFZ 1, C4<z>; HiZ drive
; Elide local net with no drivers, v000001caf18beba0_0 name=_ivl_62
v000001caf18bfe60_0 .net "carry", 0 0, L_000001caf18bf1e0;  alias, 1 drivers
v000001caf18c05e0_0 .net "carry_in", 8 0, L_000001caf18bf280;  1 drivers
v000001caf18c0680_0 .net "in1", 7 0, v000001caf18bffa0_0;  1 drivers
v000001caf18bea60_0 .net "in2", 7 0, v000001caf18beb00_0;  1 drivers
v000001caf18bff00_0 .net "sum", 7 0, L_000001caf18bf140;  alias, 1 drivers
L_000001caf18c0180 .part v000001caf18bffa0_0, 1, 1;
L_000001caf18c0900 .part v000001caf18beb00_0, 1, 1;
L_000001caf18bfc80 .part L_000001caf18bf280, 0, 1;
L_000001caf18bed80 .part v000001caf18bffa0_0, 2, 1;
L_000001caf18bf500 .part v000001caf18beb00_0, 2, 1;
L_000001caf18bfdc0 .part L_000001caf18bf280, 1, 1;
L_000001caf18bee20 .part v000001caf18bffa0_0, 3, 1;
L_000001caf18c0040 .part v000001caf18beb00_0, 3, 1;
L_000001caf18bf3c0 .part L_000001caf18bf280, 2, 1;
L_000001caf18bf460 .part v000001caf18bffa0_0, 4, 1;
L_000001caf18c00e0 .part v000001caf18beb00_0, 4, 1;
L_000001caf18bf6e0 .part L_000001caf18bf280, 3, 1;
L_000001caf18beec0 .part v000001caf18bffa0_0, 5, 1;
L_000001caf18c0720 .part v000001caf18beb00_0, 5, 1;
L_000001caf18c02c0 .part L_000001caf18bf280, 4, 1;
L_000001caf18bef60 .part v000001caf18bffa0_0, 6, 1;
L_000001caf18bf000 .part v000001caf18beb00_0, 6, 1;
L_000001caf18c0400 .part L_000001caf18bf280, 5, 1;
L_000001caf18c0360 .part v000001caf18bffa0_0, 7, 1;
L_000001caf18c07c0 .part v000001caf18beb00_0, 7, 1;
L_000001caf18c0540 .part L_000001caf18bf280, 6, 1;
L_000001caf18c0860 .part v000001caf18bffa0_0, 0, 1;
L_000001caf18bf0a0 .part v000001caf18beb00_0, 0, 1;
LS_000001caf18bf140_0_0 .concat8 [ 1 1 1 1], L_000001caf18c43c0, L_000001caf185fd30, L_000001caf185fe80, L_000001caf185f550;
LS_000001caf18bf140_0_4 .concat8 [ 1 1 1 1], L_000001caf185f0f0, L_000001caf18c45f0, L_000001caf18c42e0, L_000001caf18c3d30;
L_000001caf18bf140 .concat8 [ 4 4 0 0], LS_000001caf18bf140_0_0, LS_000001caf18bf140_0_4;
L_000001caf18bf1e0 .part L_000001caf18bf280, 8, 1;
LS_000001caf18bf280_0_0 .concat [ 1 1 1 1], L_000001caf18c47b0, L_000001caf185fb70, L_000001caf185fbe0, L_000001caf185fcc0;
LS_000001caf18bf280_0_4 .concat [ 1 1 1 1], L_000001caf18c3e80, L_000001caf18c3b00, L_000001caf18c40b0, L_000001caf18c46d0;
LS_000001caf18bf280_0_8 .concat [ 1 0 0 0], o000001caf18688b8;
L_000001caf18bf280 .concat [ 4 4 1 0], LS_000001caf18bf280_0_0, LS_000001caf18bf280_0_4, LS_000001caf18bf280_0_8;
S_000001caf184c7e0 .scope generate, "genblk1[1]" "genblk1[1]" 4 21, 4 21 0, S_000001caf184c650;
 .timescale -12 -12;
P_000001caf1863030 .param/l "i" 0 4 21, +C4<01>;
S_000001caf1847530 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001caf184c7e0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001caf185f7f0 .functor XOR 1, L_000001caf18c0180, L_000001caf18c0900, C4<0>, C4<0>;
L_000001caf185fd30 .functor XOR 1, L_000001caf185f7f0, L_000001caf18bfc80, C4<0>, C4<0>;
L_000001caf185f1d0 .functor AND 1, L_000001caf18c0180, L_000001caf18c0900, C4<1>, C4<1>;
L_000001caf185f160 .functor AND 1, L_000001caf18c0180, L_000001caf18bfc80, C4<1>, C4<1>;
L_000001caf185ffd0 .functor OR 1, L_000001caf185f1d0, L_000001caf185f160, C4<0>, C4<0>;
L_000001caf185f400 .functor AND 1, L_000001caf18c0900, L_000001caf18bfc80, C4<1>, C4<1>;
L_000001caf185fb70 .functor OR 1, L_000001caf185ffd0, L_000001caf185f400, C4<0>, C4<0>;
v000001caf1856b00_0 .net *"_ivl_0", 0 0, L_000001caf185f7f0;  1 drivers
v000001caf18582c0_0 .net *"_ivl_10", 0 0, L_000001caf185f400;  1 drivers
v000001caf1857aa0_0 .net *"_ivl_4", 0 0, L_000001caf185f1d0;  1 drivers
v000001caf1857b40_0 .net *"_ivl_6", 0 0, L_000001caf185f160;  1 drivers
v000001caf1857be0_0 .net *"_ivl_8", 0 0, L_000001caf185ffd0;  1 drivers
v000001caf1857c80_0 .net "a", 0 0, L_000001caf18c0180;  1 drivers
v000001caf1858220_0 .net "b", 0 0, L_000001caf18c0900;  1 drivers
v000001caf1857d20_0 .net "cin", 0 0, L_000001caf18bfc80;  1 drivers
v000001caf1858360_0 .net "fa_carry", 0 0, L_000001caf185fb70;  1 drivers
v000001caf18584a0_0 .net "fa_sum", 0 0, L_000001caf185fd30;  1 drivers
S_000001caf18476c0 .scope generate, "genblk1[2]" "genblk1[2]" 4 21, 4 21 0, S_000001caf184c650;
 .timescale -12 -12;
P_000001caf1862570 .param/l "i" 0 4 21, +C4<010>;
S_000001caf18ba4c0 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001caf18476c0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001caf185f2b0 .functor XOR 1, L_000001caf18bed80, L_000001caf18bf500, C4<0>, C4<0>;
L_000001caf185fe80 .functor XOR 1, L_000001caf185f2b0, L_000001caf18bfdc0, C4<0>, C4<0>;
L_000001caf185f390 .functor AND 1, L_000001caf18bed80, L_000001caf18bf500, C4<1>, C4<1>;
L_000001caf185f8d0 .functor AND 1, L_000001caf18bed80, L_000001caf18bfdc0, C4<1>, C4<1>;
L_000001caf185fda0 .functor OR 1, L_000001caf185f390, L_000001caf185f8d0, C4<0>, C4<0>;
L_000001caf185f470 .functor AND 1, L_000001caf18bf500, L_000001caf18bfdc0, C4<1>, C4<1>;
L_000001caf185fbe0 .functor OR 1, L_000001caf185fda0, L_000001caf185f470, C4<0>, C4<0>;
v000001caf1858540_0 .net *"_ivl_0", 0 0, L_000001caf185f2b0;  1 drivers
v000001caf1852440_0 .net *"_ivl_10", 0 0, L_000001caf185f470;  1 drivers
v000001caf1852620_0 .net *"_ivl_4", 0 0, L_000001caf185f390;  1 drivers
v000001caf1852f80_0 .net *"_ivl_6", 0 0, L_000001caf185f8d0;  1 drivers
v000001caf1852a80_0 .net *"_ivl_8", 0 0, L_000001caf185fda0;  1 drivers
v000001caf18baba0_0 .net "a", 0 0, L_000001caf18bed80;  1 drivers
v000001caf18bb280_0 .net "b", 0 0, L_000001caf18bf500;  1 drivers
v000001caf18baec0_0 .net "cin", 0 0, L_000001caf18bfdc0;  1 drivers
v000001caf18bb460_0 .net "fa_carry", 0 0, L_000001caf185fbe0;  1 drivers
v000001caf18bb320_0 .net "fa_sum", 0 0, L_000001caf185fe80;  1 drivers
S_000001caf18bc660 .scope generate, "genblk1[3]" "genblk1[3]" 4 21, 4 21 0, S_000001caf184c650;
 .timescale -12 -12;
P_000001caf1862cb0 .param/l "i" 0 4 21, +C4<011>;
S_000001caf18bc7f0 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001caf18bc660;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001caf185f630 .functor XOR 1, L_000001caf18bee20, L_000001caf18c0040, C4<0>, C4<0>;
L_000001caf185f550 .functor XOR 1, L_000001caf185f630, L_000001caf18bf3c0, C4<0>, C4<0>;
L_000001caf185f5c0 .functor AND 1, L_000001caf18bee20, L_000001caf18c0040, C4<1>, C4<1>;
L_000001caf185fc50 .functor AND 1, L_000001caf18bee20, L_000001caf18bf3c0, C4<1>, C4<1>;
L_000001caf185f780 .functor OR 1, L_000001caf185f5c0, L_000001caf185fc50, C4<0>, C4<0>;
L_000001caf185f9b0 .functor AND 1, L_000001caf18c0040, L_000001caf18bf3c0, C4<1>, C4<1>;
L_000001caf185fcc0 .functor OR 1, L_000001caf185f780, L_000001caf185f9b0, C4<0>, C4<0>;
v000001caf18bace0_0 .net *"_ivl_0", 0 0, L_000001caf185f630;  1 drivers
v000001caf18bb500_0 .net *"_ivl_10", 0 0, L_000001caf185f9b0;  1 drivers
v000001caf18bc540_0 .net *"_ivl_4", 0 0, L_000001caf185f5c0;  1 drivers
v000001caf18baa60_0 .net *"_ivl_6", 0 0, L_000001caf185fc50;  1 drivers
v000001caf18bb3c0_0 .net *"_ivl_8", 0 0, L_000001caf185f780;  1 drivers
v000001caf18bb5a0_0 .net "a", 0 0, L_000001caf18bee20;  1 drivers
v000001caf18ba7e0_0 .net "b", 0 0, L_000001caf18c0040;  1 drivers
v000001caf18bbbe0_0 .net "cin", 0 0, L_000001caf18bf3c0;  1 drivers
v000001caf18bb780_0 .net "fa_carry", 0 0, L_000001caf185fcc0;  1 drivers
v000001caf18bbfa0_0 .net "fa_sum", 0 0, L_000001caf185f550;  1 drivers
S_000001caf18bdd90 .scope generate, "genblk1[4]" "genblk1[4]" 4 21, 4 21 0, S_000001caf184c650;
 .timescale -12 -12;
P_000001caf1862630 .param/l "i" 0 4 21, +C4<0100>;
S_000001caf18bdf20 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001caf18bdd90;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001caf185fe10 .functor XOR 1, L_000001caf18bf460, L_000001caf18c00e0, C4<0>, C4<0>;
L_000001caf185f0f0 .functor XOR 1, L_000001caf185fe10, L_000001caf18bf6e0, C4<0>, C4<0>;
L_000001caf185fef0 .functor AND 1, L_000001caf18bf460, L_000001caf18c00e0, C4<1>, C4<1>;
L_000001caf18c3b70 .functor AND 1, L_000001caf18bf460, L_000001caf18bf6e0, C4<1>, C4<1>;
L_000001caf18c4580 .functor OR 1, L_000001caf185fef0, L_000001caf18c3b70, C4<0>, C4<0>;
L_000001caf18c4970 .functor AND 1, L_000001caf18c00e0, L_000001caf18bf6e0, C4<1>, C4<1>;
L_000001caf18c3e80 .functor OR 1, L_000001caf18c4580, L_000001caf18c4970, C4<0>, C4<0>;
v000001caf18bab00_0 .net *"_ivl_0", 0 0, L_000001caf185fe10;  1 drivers
v000001caf18bb0a0_0 .net *"_ivl_10", 0 0, L_000001caf18c4970;  1 drivers
v000001caf18bac40_0 .net *"_ivl_4", 0 0, L_000001caf185fef0;  1 drivers
v000001caf18bb140_0 .net *"_ivl_6", 0 0, L_000001caf18c3b70;  1 drivers
v000001caf18bb8c0_0 .net *"_ivl_8", 0 0, L_000001caf18c4580;  1 drivers
v000001caf18ba740_0 .net "a", 0 0, L_000001caf18bf460;  1 drivers
v000001caf18bc4a0_0 .net "b", 0 0, L_000001caf18c00e0;  1 drivers
v000001caf18baf60_0 .net "cin", 0 0, L_000001caf18bf6e0;  1 drivers
v000001caf18bb640_0 .net "fa_carry", 0 0, L_000001caf18c3e80;  1 drivers
v000001caf18bb820_0 .net "fa_sum", 0 0, L_000001caf185f0f0;  1 drivers
S_000001caf18be0b0 .scope generate, "genblk1[5]" "genblk1[5]" 4 21, 4 21 0, S_000001caf184c650;
 .timescale -12 -12;
P_000001caf18633b0 .param/l "i" 0 4 21, +C4<0101>;
S_000001caf18be240 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001caf18be0b0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001caf18c4890 .functor XOR 1, L_000001caf18beec0, L_000001caf18c0720, C4<0>, C4<0>;
L_000001caf18c45f0 .functor XOR 1, L_000001caf18c4890, L_000001caf18c02c0, C4<0>, C4<0>;
L_000001caf18c4200 .functor AND 1, L_000001caf18beec0, L_000001caf18c0720, C4<1>, C4<1>;
L_000001caf18c3fd0 .functor AND 1, L_000001caf18beec0, L_000001caf18c02c0, C4<1>, C4<1>;
L_000001caf18c4040 .functor OR 1, L_000001caf18c4200, L_000001caf18c3fd0, C4<0>, C4<0>;
L_000001caf18c3a90 .functor AND 1, L_000001caf18c0720, L_000001caf18c02c0, C4<1>, C4<1>;
L_000001caf18c3b00 .functor OR 1, L_000001caf18c4040, L_000001caf18c3a90, C4<0>, C4<0>;
v000001caf18ba6a0_0 .net *"_ivl_0", 0 0, L_000001caf18c4890;  1 drivers
v000001caf18bb6e0_0 .net *"_ivl_10", 0 0, L_000001caf18c3a90;  1 drivers
v000001caf18bb960_0 .net *"_ivl_4", 0 0, L_000001caf18c4200;  1 drivers
v000001caf18ba880_0 .net *"_ivl_6", 0 0, L_000001caf18c3fd0;  1 drivers
v000001caf18bad80_0 .net *"_ivl_8", 0 0, L_000001caf18c4040;  1 drivers
v000001caf18bae20_0 .net "a", 0 0, L_000001caf18beec0;  1 drivers
v000001caf18bb000_0 .net "b", 0 0, L_000001caf18c0720;  1 drivers
v000001caf18bba00_0 .net "cin", 0 0, L_000001caf18c02c0;  1 drivers
v000001caf18bbf00_0 .net "fa_carry", 0 0, L_000001caf18c3b00;  1 drivers
v000001caf18bbaa0_0 .net "fa_sum", 0 0, L_000001caf18c45f0;  1 drivers
S_000001caf18be3d0 .scope generate, "genblk1[6]" "genblk1[6]" 4 21, 4 21 0, S_000001caf184c650;
 .timescale -12 -12;
P_000001caf1862a70 .param/l "i" 0 4 21, +C4<0110>;
S_000001caf18be560 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001caf18be3d0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001caf18c3f60 .functor XOR 1, L_000001caf18bef60, L_000001caf18bf000, C4<0>, C4<0>;
L_000001caf18c42e0 .functor XOR 1, L_000001caf18c3f60, L_000001caf18c0400, C4<0>, C4<0>;
L_000001caf18c4430 .functor AND 1, L_000001caf18bef60, L_000001caf18bf000, C4<1>, C4<1>;
L_000001caf18c3ef0 .functor AND 1, L_000001caf18bef60, L_000001caf18c0400, C4<1>, C4<1>;
L_000001caf18c3be0 .functor OR 1, L_000001caf18c4430, L_000001caf18c3ef0, C4<0>, C4<0>;
L_000001caf18c3cc0 .functor AND 1, L_000001caf18bf000, L_000001caf18c0400, C4<1>, C4<1>;
L_000001caf18c40b0 .functor OR 1, L_000001caf18c3be0, L_000001caf18c3cc0, C4<0>, C4<0>;
v000001caf18bbb40_0 .net *"_ivl_0", 0 0, L_000001caf18c3f60;  1 drivers
v000001caf18bbc80_0 .net *"_ivl_10", 0 0, L_000001caf18c3cc0;  1 drivers
v000001caf18bbd20_0 .net *"_ivl_4", 0 0, L_000001caf18c4430;  1 drivers
v000001caf18bc180_0 .net *"_ivl_6", 0 0, L_000001caf18c3ef0;  1 drivers
v000001caf18bc220_0 .net *"_ivl_8", 0 0, L_000001caf18c3be0;  1 drivers
v000001caf18bbdc0_0 .net "a", 0 0, L_000001caf18bef60;  1 drivers
v000001caf18bb1e0_0 .net "b", 0 0, L_000001caf18bf000;  1 drivers
v000001caf18bc0e0_0 .net "cin", 0 0, L_000001caf18c0400;  1 drivers
v000001caf18bbe60_0 .net "fa_carry", 0 0, L_000001caf18c40b0;  1 drivers
v000001caf18ba920_0 .net "fa_sum", 0 0, L_000001caf18c42e0;  1 drivers
S_000001caf18be6f0 .scope generate, "genblk1[7]" "genblk1[7]" 4 21, 4 21 0, S_000001caf184c650;
 .timescale -12 -12;
P_000001caf18630f0 .param/l "i" 0 4 21, +C4<0111>;
S_000001caf18be880 .scope module, "fa_inst" "full_adder" 4 22, 4 39 0, S_000001caf18be6f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 1 "fa_sum";
    .port_info 4 /OUTPUT 1 "fa_carry";
L_000001caf18c4660 .functor XOR 1, L_000001caf18c0360, L_000001caf18c07c0, C4<0>, C4<0>;
L_000001caf18c3d30 .functor XOR 1, L_000001caf18c4660, L_000001caf18c0540, C4<0>, C4<0>;
L_000001caf18c3c50 .functor AND 1, L_000001caf18c0360, L_000001caf18c07c0, C4<1>, C4<1>;
L_000001caf18c4120 .functor AND 1, L_000001caf18c0360, L_000001caf18c0540, C4<1>, C4<1>;
L_000001caf18c3da0 .functor OR 1, L_000001caf18c3c50, L_000001caf18c4120, C4<0>, C4<0>;
L_000001caf18c3e10 .functor AND 1, L_000001caf18c07c0, L_000001caf18c0540, C4<1>, C4<1>;
L_000001caf18c46d0 .functor OR 1, L_000001caf18c3da0, L_000001caf18c3e10, C4<0>, C4<0>;
v000001caf18bc040_0 .net *"_ivl_0", 0 0, L_000001caf18c4660;  1 drivers
v000001caf18ba9c0_0 .net *"_ivl_10", 0 0, L_000001caf18c3e10;  1 drivers
v000001caf18bc2c0_0 .net *"_ivl_4", 0 0, L_000001caf18c3c50;  1 drivers
v000001caf18bc360_0 .net *"_ivl_6", 0 0, L_000001caf18c4120;  1 drivers
v000001caf18bc400_0 .net *"_ivl_8", 0 0, L_000001caf18c3da0;  1 drivers
v000001caf18bf780_0 .net "a", 0 0, L_000001caf18c0360;  1 drivers
v000001caf18bfa00_0 .net "b", 0 0, L_000001caf18c07c0;  1 drivers
v000001caf18c0220_0 .net "cin", 0 0, L_000001caf18c0540;  1 drivers
v000001caf18bece0_0 .net "fa_carry", 0 0, L_000001caf18c46d0;  1 drivers
v000001caf18bf8c0_0 .net "fa_sum", 0 0, L_000001caf18c3d30;  1 drivers
S_000001caf18c16f0 .scope module, "ha0" "half_adder" 4 12, 4 54 0, S_000001caf184c650;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "ha_sum";
    .port_info 3 /OUTPUT 1 "ha_carry";
L_000001caf18c43c0 .functor XOR 1, L_000001caf18c0860, L_000001caf18bf0a0, C4<0>, C4<0>;
L_000001caf18c47b0 .functor AND 1, L_000001caf18c0860, L_000001caf18bf0a0, C4<1>, C4<1>;
v000001caf18bf960_0 .net "a", 0 0, L_000001caf18c0860;  1 drivers
v000001caf18bf640_0 .net "b", 0 0, L_000001caf18bf0a0;  1 drivers
v000001caf18c04a0_0 .net "ha_carry", 0 0, L_000001caf18c47b0;  1 drivers
v000001caf18bfaa0_0 .net "ha_sum", 0 0, L_000001caf18c43c0;  1 drivers
S_000001caf18c1880 .scope task, "test" "test" 3 16, 3 16 0, S_000001caf184e230;
 .timescale -12 -12;
v000001caf18bfb40_0 .var "a", 7 0;
v000001caf18bfbe0_0 .var "b", 7 0;
v000001caf18bec40_0 .var "expected", 7 0;
TD_adder_tb.test ;
    %load/vec4 v000001caf18bfb40_0;
    %store/vec4 v000001caf18bffa0_0, 0, 8;
    %load/vec4 v000001caf18bfbe0_0;
    %store/vec4 v000001caf18beb00_0, 0, 8;
    %delay 1, 0;
    %load/vec4 v000001caf18bfb40_0;
    %load/vec4 v000001caf18bfbe0_0;
    %add;
    %store/vec4 v000001caf18bec40_0, 0, 8;
    %load/vec4 v000001caf18bf5a0_0;
    %load/vec4 v000001caf18bfd20_0;
    %concat/vec4; draw_concat_vec4
    %load/vec4 v000001caf18bec40_0;
    %pad/u 9;
    %cmp/ne;
    %jmp/0xz  T_0.0, 4;
    %load/vec4 v000001caf18bf5a0_0;
    %load/vec4 v000001caf18bfd20_0;
    %concat/vec4; draw_concat_vec4
    %vpi_call/w 3 27 "$display", "Error \012 Expected : %0d+%0d = 0%d \012 Obtained : %0d+%0d = 0%d", v000001caf18bfb40_0, v000001caf18bfbe0_0, v000001caf18bec40_0, v000001caf18bffa0_0, v000001caf18beb00_0, S<0,vec4,u9> {1 0 0};
    %jmp T_0.1;
T_0.0 ;
    %vpi_call/w 3 30 "$display", "Test cases passed!" {0 0 0};
T_0.1 ;
    %end;
    .scope S_000001caf184e230;
T_1 ;
    %vpi_call/w 3 39 "$display", "Starting adder functional verification..." {0 0 0};
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001caf18bfb40_0, 0, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001caf18bfbe0_0, 0, 8;
    %fork TD_adder_tb.test, S_000001caf18c1880;
    %join;
    %pushi/vec4 5, 0, 8;
    %store/vec4 v000001caf18bfb40_0, 0, 8;
    %pushi/vec4 10, 0, 8;
    %store/vec4 v000001caf18bfbe0_0, 0, 8;
    %fork TD_adder_tb.test, S_000001caf18c1880;
    %join;
    %pushi/vec4 127, 0, 8;
    %store/vec4 v000001caf18bfb40_0, 0, 8;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v000001caf18bfbe0_0, 0, 8;
    %fork TD_adder_tb.test, S_000001caf18c1880;
    %join;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001caf18bfb40_0, 0, 8;
    %pushi/vec4 1, 0, 8;
    %store/vec4 v000001caf18bfbe0_0, 0, 8;
    %fork TD_adder_tb.test, S_000001caf18c1880;
    %join;
    %pushi/vec4 200, 0, 8;
    %store/vec4 v000001caf18bfb40_0, 0, 8;
    %pushi/vec4 100, 0, 8;
    %store/vec4 v000001caf18bfbe0_0, 0, 8;
    %fork TD_adder_tb.test, S_000001caf18c1880;
    %join;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001caf18bfb40_0, 0, 8;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001caf18bfbe0_0, 0, 8;
    %fork TD_adder_tb.test, S_000001caf18c1880;
    %join;
    %pushi/vec4 10, 0, 32;
T_1.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_1.1, 5;
    %jmp/1 T_1.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %vpi_func 3 51 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000011111111 {0 0 0};
    %pad/u 8;
    %store/vec4 v000001caf18bfb40_0, 0, 8;
    %vpi_func 3 51 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000011111111 {0 0 0};
    %pad/u 8;
    %store/vec4 v000001caf18bfbe0_0, 0, 8;
    %fork TD_adder_tb.test, S_000001caf18c1880;
    %join;
    %jmp T_1.0;
T_1.1 ;
    %pop/vec4 1;
    %vpi_call/w 3 54 "$display", "Testbench completed." {0 0 0};
    %vpi_call/w 3 55 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    ".\functional\adder_tb.sv";
    ".\src\adder.sv";
